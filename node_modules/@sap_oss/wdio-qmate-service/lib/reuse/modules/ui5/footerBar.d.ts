/**
 * @class footerBar
 * @memberof ui5
 */
export declare class FooterBar {
    private vlf;
    selectors: {
        genericButton: (text: string) => {
            elementProperties: {
                metadata: string;
                mProperties: {
                    text: string;
                };
            };
            parentProperties: {
                metadata: string;
            };
        };
        messageBoxButton: {
            elementProperties: {
                metadata: string;
                mProperties: {
                    id: string;
                };
            };
        };
        messageBoxCloseButton: {
            elementProperties: {
                metadata: string;
                mProperties: {
                    icon: string;
                };
            };
            ancestorProperties: {
                metadata: string;
                mProperties: {
                    id: string;
                };
            };
        };
        messageBox: {
            elementProperties: {
                metadata: string;
                mProperties: {
                    id: string;
                };
            };
        };
    };
    /**
     * @function clickButton
     * @memberOf ui5.footerBar
     * @description Clicks the button with the given text at the footer bar.
     * @param {String} text - The text of the button.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickButton("Ok");
     */
    clickButton(text: string, timeout?: string | number): Promise<void>;
    /**
     * @function clickApply
     * @memberOf ui5.footerBar
     * @description Clicks the 'Apply' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickApply();
     */
    clickApply(timeout?: string | number): Promise<void>;
    /**
     * @function clickSave
     * @memberOf ui5.footerBar
     * @description Clicks the 'Save' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickSave();
     */
    clickSave(timeout?: string | number): Promise<void>;
    /**
     * @function clickCreate
     * @memberOf ui5.footerBar
     * @description Clicks the 'Create' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickCreate();
     */
    clickCreate(timeout?: string | number): Promise<void>;
    /**
     * @function clickCancel
     * @memberOf ui5.footerBar
     * @description Clicks the 'Cancel' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickCancel();
     */
    clickCancel(timeout?: string | number): Promise<void>;
    /**
     * @function clickCheck
     * @memberOf ui5.footerBar
     * @description Clicks the 'Check' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickCheck();
     */
    clickCheck(timeout?: string | number): Promise<void>;
    /**
     * @function clickOrder
     * @memberOf ui5.footerBar
     * @description Clicks the 'Order' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickOrder();
     */
    clickOrder(timeout?: string | number): Promise<void>;
    /**
     * @function clickPost
     * @memberOf ui5.footerBar
     * @description Clicks the 'Post' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickPost();
     */
    clickPost(timeout?: string | number): Promise<void>;
    /**
     * @function clickAdd
     * @memberOf ui5.footerBar
     * @description Clicks the 'Add' button at the footer toolbar.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.footerBar.clickAdd();
     */
    clickAdd(timeout?: string | number): Promise<void>;
    /**
     * @function clickMessageBoxButton
     * @memberOf ui5.messageBox
     * @description Opens the message box by clicking the button at the footer bar.
     * @example await ui5.messageBox.clickMessageBoxButton();
     */
    clickMessageBoxButton(): Promise<void>;
    /**
     * @function clickCloseMessageBox
     * @memberOf ui5.messageBox
     * @description Closes the message box by clicking the close icon.
     * @example await ui5.messageBox.clickCloseMessageBox();
     */
    clickCloseMessageBox(): Promise<void>;
    /**
     * @function expectMessageBoxToBeVisible
     * @memberOf ui5.messageBox
     * @description Expects the MessageBox to be visible.
     * @example await ui5.messageBox.expectMessageBoxToBeVisible();
     */
    expectMessageBoxToBeVisible(): Promise<any>;
    /**
     * @function isMessageBoxVisible
     * @memberOf ui5.messageBox
     * @description Determines if the messageBox is visible.
     * @returns {Boolean} Bool value if the element is visible or not.
     * @example await ui5.messageBox.isMessageBoxVisible();
     */
    isMessageBoxVisible(): Promise<string>;
}
declare const _default: FooterBar;
export default _default;
