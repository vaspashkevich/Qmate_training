/**
 * @class confirmationDialog
 * @memberof ui5
 */
export declare class ConfirmationDialog {
    private vlf;
    selectors: {
        genericButton: (text: string) => {
            elementProperties: {
                metadata: string;
                mProperties: {
                    text: string;
                };
            };
            parentProperties: {
                metadata: string;
            };
        };
    };
    /**
     * @function clickButton
     * @memberOf ui5.confirmationDialog
     * @description Clicks the button with the given text at the confirmation dialog.
     * @param {String} text - The text of the button.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.confirmationDialog.clickButton("Ok");
     */
    clickButton(text: string, timeout?: string | number): Promise<void>;
    /**
     * @function clickOk
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "OK" button at the confirmation dialog.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.confirmationDialog.clickOk();
     */
    clickOk(timeout?: string | number): Promise<void>;
    /**
     * @function clickCancel
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "Cancel" button at the confirmation dialog.
     * @param {Number} [timeout=30000] - The timeout to wait (ms).
     * @example await ui5.confirmationDialog.clickCancel();
     */
    clickCancel(timeout?: string | number): Promise<void>;
    /**
     * @function clickYes
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "Yes" button at the confirmation dialog.
     * @param {Number} [timeout] - The timeout to wait (default value: 30 sec).
     * @example await ui5.confirmationDialog.clickYes();
     */
    clickYes(timeout?: string | number): Promise<void>;
    /**
     * @function clickNo
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "Yes" button at the confirmation dialog.
     * @param {Number} [timeout] - The timeout to wait (default value: 30 sec).
     * @example await ui5.confirmationDialog.clickNo();
     */
    clickNo(timeout?: string | number): Promise<void>;
    /**
     * @function clickCreate
     * @memberOf ui5.confirmationDialog
     * @description Clicks the create button in the confirmation dialog
     * @param {Number} [timeout] - The timeout to wait (default value: 30 sec).
     * @example await ui5.confirmationDialog.clickCreate();
     */
    clickCreate(timeout?: string | number): Promise<void>;
    /**
     * @function clickDelete
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "Delete" button at the confirmation dialog.
     * @param {Number} [timeout] - The timeout to wait (default value: 30 sec).
     * @example await ui5.confirmationDialog.clickDelete();
     */
    clickDelete(timeout?: string | number): Promise<void>;
    /**
     * @function clickRevokeApproval
     * @memberOf ui5.confirmationDialog
     * @description Clicks the "Revoke Approval" button at the confirmation dialog.
     * @param {Number} [timeout] - The timeout to wait (default value: 30 sec).
     * @example await ui5.confirmationDialog.clickRevokeApproval();
     */
    clickRevokeApproval(timeout?: string | number): Promise<void>;
}
declare const _default: ConfirmationDialog;
export default _default;
