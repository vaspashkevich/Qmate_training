export interface BaseLogger {
    log: (message: string) => void;
}
export declare class ActiveLogger implements BaseLogger {
    private readonly invoker;
    private readonly prefix;
    constructor(invoker: Function, prefix: string);
    log(message: string): void;
    error(e: Error): void;
}
export declare class InactiveLogger implements BaseLogger {
    log(_message: string): void;
}
export declare class VerboseLoggerFactory {
    private readonly namespace;
    private readonly moduleName;
    private isActive;
    private prefix;
    constructor(namespace: string, moduleName: string);
    initLog(invoker: Function): ActiveLogger | InactiveLogger;
}
