"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = __importDefault(require("../../reuse/index"));
const Runtime_1 = __importDefault(require("../../reuse/modules/runtime/Runtime"));
const dataExchangeCommands_1 = __importDefault(require("./utils/dataExchangeCommands"));
const decryption_1 = __importDefault(require("./utils/decryption"));
/**
 * Gets executed just before initializing the webdriver session and test framework. It allows you
 * to manipulate configurations depending on the capability or spec.
 * @param {Object} config wdio configuration object
 * @param {Array.<Object>} capabilities list of capabilities details
 * @param {Array.<String>} specs List of spec file paths that are to be run
 */
async function default_1(config, capabilities, specs) {
    // This class is for storing any runtime information (like current specs, ...) and accessing it in the reuse functions.
    global.runtime = Runtime_1.default;
    global.runtime.specs = specs;
    index_1.default.load();
    decryption_1.default.initDecryptFunction();
    if (config.user || config.key) {
        decryption_1.default.decryptSauceConfig(config);
    }
    await dataExchangeCommands_1.default.readParams();
}
exports.default = default_1;
//# sourceMappingURL=beforeSession.js.map