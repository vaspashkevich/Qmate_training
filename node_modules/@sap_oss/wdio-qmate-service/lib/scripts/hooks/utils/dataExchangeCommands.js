"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable no-console */
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const os_1 = __importDefault(require("os"));
const dataExchange = require("../../dataExchange/dataExchange");
async function createTmpDataFolder() {
    try {
        // create tmp folder name to store export data 
        const randomStr = "vyp-exp-" + Math.random().toString(16).substring(2, 10);
        const tmpDir = path_1.default.join(os_1.default.tmpdir(), randomStr);
        process.env.TMP_EXPORT_PATH = tmpDir;
        await fs_extra_1.default.ensureDir(process.env.TMP_EXPORT_PATH);
    }
    catch (error) {
        // log and continue
        console.warn(`Failed to create tmp data folder`);
        console.warn(error);
    }
}
class DataFolderCommands {
    constructor() {
        this.createTmpDataFolder = createTmpDataFolder;
        this.readParams = dataExchange.readParams;
        this.writeExportDataInTmpFile = dataExchange.writeExportDataInTmpFile;
        this.writeExportData = dataExchange.writeExportData;
    }
}
;
exports.default = new DataFolderCommands();
//# sourceMappingURL=dataExchangeCommands.js.map