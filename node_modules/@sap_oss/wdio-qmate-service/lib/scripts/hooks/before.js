"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addLocatorCommands_1 = __importDefault(require("./utils/addLocatorCommands"));
const authHandler_1 = __importDefault(require("../../reuse/authenticator/authHandler"));
/**
 * Gets executed before test execution begins. At this point you can access to all global
 * variables like `browser`. It is the perfect place to define custom commands.
 * @param {Array.<Object>} capabilities list of capabilities details
 * @param {Array.<String>} specs        List of spec file paths that are to be run
 * @param {Object}         browser      instance of created browser/device session
 */
async function default_1(capabilities, specs, browser) {
    // Add ui control selector & properties
    await addLocatorCommands_1.default.addControlCommands();
    await addLocatorCommands_1.default.addGetControlProperties();
    await addLocatorCommands_1.default.addInBrowserHandling();
    // Add ui control binding information
    await addLocatorCommands_1.default.addGetBindingInfos();
    //Add authenticators
    await authHandler_1.default.attachAuthHandling();
}
exports.default = default_1;
;
//# sourceMappingURL=before.js.map